a:2:{s:4:"meta";a:3:{s:5:"title";s:16:"datamints_feuser";s:5:"descr";s:40:"A extension for frontend user mangement.";s:7:"options";a:2:{s:10:"usageCount";s:1:"1";s:19:"includeCodeAbstract";s:1:"1";}}s:5:"files";a:2:{s:14:"MD5_2659c86712";a:5:{s:8:"filename";s:35:"class.tx_flexform_getFieldNames.php";s:8:"filesize";i:1842;s:6:"header";a:5:{s:4:"text";s:84:"

Class 'tx_flexform_getFieldNames' which gets all field names from the "fe_users".
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}s:5:"other";a:3:{i:0;s:54:"@author	Bernhard baumgartl <b.baumgartl@datamints.com>";i:1;s:14:"@package	TYPO3";i:2;s:30:"@subpackage	tx_datamintsfeuser";}s:11:"other_index";a:3:{s:7:"@author";a:1:{i:0;s:46:"Bernhard baumgartl <b.baumgartl@datamints.com>";}s:8:"@package";a:1:{i:0;s:6:"TYPO3 ";}s:11:"@subpackage";a:1:{i:0;s:19:"tx_datamintsfeuser ";}}}s:3:"DAT";a:2:{i:1;a:5:{s:6:"header";s:33:"class tx_flexform_getFieldNames {";s:5:"class";i:1;s:11:"parentClass";s:25:"tx_flexform_getFieldNames";s:4:"cDat";a:5:{s:4:"text";s:84:"

Class 'tx_flexform_getFieldNames' which gets all field names from the "fe_users".
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}s:5:"other";a:3:{i:0;s:54:"@author	Bernhard baumgartl <b.baumgartl@datamints.com>";i:1;s:14:"@package	TYPO3";i:2;s:30:"@subpackage	tx_datamintsfeuser";}s:11:"other_index";a:3:{s:7:"@author";a:1:{i:0;s:46:"Bernhard baumgartl <b.baumgartl@datamints.com>";}s:8:"@package";a:1:{i:0;s:6:"TYPO3 ";}s:11:"@subpackage";a:1:{i:0;s:19:"tx_datamintsfeuser ";}}}s:6:"atLine";i:30;}i:3;a:7:{s:6:"header";s:33:"function getFieldNames($config) {";s:11:"parentClass";s:25:"tx_flexform_getFieldNames";s:4:"cDat";a:3:{s:4:"text";s:98:"

The getFields method is used to get the "fe_users" field names into the flexform of the plugin.
";s:5:"param";a:1:{i:0;a:2:{i:0;s:5:"array";i:1;s:28:"$config: the fields selected";}}s:6:"return";a:2:{i:0;s:5:"array";i:1;s:7:"$config";}}s:7:"content";a:2:{i:0;s:367:"
		global $TCA; //Damit $TCA hier zur Verfügung steht
		//$TCA-Teil laden. Damit können wir alle Felder durchgehen
		t3lib_div::loadTCA('fe_users');

		$fieldList = array();
		foreach ($TCA['fe_users']['columns'] as $key => $value){
			$fieldList[] = array( $key, $key);
		}

		$config['items'] = array_merge($config['items'], $fieldList);
		return $config;
	}

}

?>";i:1;i:0;}s:12:"content_size";i:367;s:13:"content_lines";i:16;s:6:"atLine";i:38;}}s:10:"usageCount";a:2:{s:12:"H_3521012205";a:2:{s:24:"_searchtime_milliseconds";d:4;s:15:"_functionHeader";s:33:"class tx_flexform_getFieldNames {";}s:12:"H_f8248cbb61";a:2:{s:24:"_searchtime_milliseconds";d:0;s:15:"_functionHeader";s:33:"function getFieldNames($config) {";}}}s:14:"MD5_8f66ccd171";a:5:{s:8:"filename";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:8:"filesize";i:94042;s:6:"header";a:5:{s:4:"text";s:74:"

Plugin 'Frontend User Management' for the 'datamints_feuser' extension.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}s:5:"other";a:3:{i:0;s:54:"@author	Bernhard Baumgartl <b.baumgartl@datamints.com>";i:1;s:14:"@package	TYPO3";i:2;s:30:"@subpackage	tx_datamintsfeuser";}s:11:"other_index";a:3:{s:7:"@author";a:1:{i:0;s:46:"Bernhard Baumgartl <b.baumgartl@datamints.com>";}s:8:"@package";a:1:{i:0;s:6:"TYPO3 ";}s:11:"@subpackage";a:1:{i:0;s:19:"tx_datamintsfeuser ";}}}s:3:"DAT";a:46:{i:1;a:8:{s:6:"header";s:51:"class tx_datamintsfeuser_pi1 extends tslib_pibase {";s:5:"class";i:1;s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:5:{s:4:"text";s:74:"

Plugin 'Frontend User Management' for the 'datamints_feuser' extension.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}s:5:"other";a:3:{i:0;s:54:"@author	Bernhard Baumgartl <b.baumgartl@datamints.com>";i:1;s:14:"@package	TYPO3";i:2;s:30:"@subpackage	tx_datamintsfeuser";}s:11:"other_index";a:3:{s:7:"@author";a:1:{i:0;s:46:"Bernhard Baumgartl <b.baumgartl@datamints.com>";}s:8:"@package";a:1:{i:0;s:6:"TYPO3 ";}s:11:"@subpackage";a:1:{i:0;s:19:"tx_datamintsfeuser ";}}}s:7:"content";a:2:{i:0;s:572:"	var $prefixId      = 'tx_datamintsfeuser_pi1';		// Same as class name
	var $scriptRelPath = 'pi1/class.tx_datamintsfeuser_pi1.php';	// Path to this script relative to the extension dir.
	var $extKey        = 'datamints_feuser';	// The extension key.
	var $pi_checkCHash = true;
	var $feUsersTca = array();
	var $storagePid = 0;
	var $contentUid = 0;
	var $conf = array();
	var $extConf = array();
	var $lang = array();
	var $userId = 0;
	var $arrUsedFields = array();
	var $arrRequiredFields = array();
	var $arrUniqueFields = array();
	var $arrHiddenParams = array();

	";i:1;i:-1;}s:12:"content_size";i:572;s:13:"content_lines";i:16;s:6:"atLine";i:90;}i:3;a:7:{s:6:"header";s:32:"function main($content, $conf) {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:32:"

The main method of the PlugIn
";s:5:"param";a:2:{i:0;a:2:{i:0;s:6:"string";i:1;s:28:"$content: The PlugIn content";}i:1;a:2:{i:0;s:5:"array";i:1;s:31:"$conf: The PlugIn configuration";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:44:"The content that is displayed on the website";}}s:7:"content";a:2:{i:0;s:507:"		$this->conf = $conf;

		// Debug.
		//$GLOBALS['TSFE']->set_no_cache();
		//$GLOBALS['TYPO3_DB']->debugOutput = true;

		// ContentId ermitteln.
		$this->contentId = $this->cObj->data['uid'];

		// UserId ermitteln.
		$this->userId = $GLOBALS['TSFE']->fe_user->user['uid'];

		// Flexform und Configurationen laden.
		$this->pi_setPiVarDefaults();
		$this->pi_initPIflexFor
[...]
			break;

			default:
				$content = $this->showForm();
				break;

		}

		return $this->pi_wrapInBaseClass($content);
	}

	";i:1;i:1;}s:12:"content_size";i:2080;s:13:"content_lines";i:53;s:6:"atLine";i:114;}i:5;a:7:{s:6:"header";s:21:"function sendForm() {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:122:"

Bereitet die uebergebenen Daten fuer den Import in die Datenbank vor, und fuehrt diesen, wenn es keine Fehler gab, aus.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:0:"";}}s:7:"content";a:2:{i:0;s:507:"		$mode = '';
		$submode = '';
		$params = array();

		// Jedes Element trimmen.
		foreach ($this->piVars[$this->contentId] as $key => $value) {
			if (!is_array($value)) {
				$this->piVars[$this->contentId][$key] = trim($value);
			}
		}

		// Ueberpruefen ob Datenbankeintraege mit den uebergebenen Daten uebereinstimmen.
		$uniqueCheck = $this->uniqueCheckForm();

		// E
[...]
dForm_update($_getter, $_setter, $this);
			}
		}

		return $this->showMessageOutputRedirect($mode, $submode, $params);
	}

	";i:1;i:1;}s:12:"content_size";i:12483;s:13:"content_lines";i:296;s:6:"atLine";i:173;}i:7;a:7:{s:6:"header";s:28:"function uniqueCheckForm() {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:112:"

Ueberprueft die uebergebenen Inhalte, bei bestimmten Feldern, ob diese in der Datenbank schon vorhanden sind.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:5:"array";i:1;s:11:"$valueCheck";}}s:7:"content";a:2:{i:0;s:507:"		$valueCheck = array();

		// Wenn User eingeloggt, dann den eigenen Datensatz nicht durchsuchen.
		if ($this->conf['showtype'] == 'edit' && $this->userId) {
			$where = ' AND uid <> ' . $this->userId;
		}

		foreach ($this->arrUniqueFields as $fieldName) {
			if ($this->piVars[$this->contentId][$fieldName]) {
				$res = $GLOBALS['TYPO3_DB']->exec_SELECTquery('COUNT(uid) 
[...]
oc($res);

				if ($row['count'] >= 1) {
					$valueCheck[$fieldName] = 'unique';
				}
			}
		}

		return $valueCheck;
	}

	";i:1;i:1;}s:12:"content_size";i:763;s:13:"content_lines";i:21;s:6:"atLine";i:475;}i:9;a:7:{s:6:"header";s:25:"function validateForm() {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:56:"

Ueberprueft ob alle Validierungen eingehalten wurden.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:5:"array";i:1;s:11:"$valueCheck";}}s:7:"content";a:2:{i:0;s:507:"		$valueCheck = array();

		// Alle ausgewaehlten Felder durchgehen.
		foreach ($this->arrUsedFields as $fieldName) {
			$fieldName = $this->cleanSpecialFieldKey($fieldName);
			$validate = $this->conf['validate.'][$fieldName . '.'];
			$value = trim($this->piVars[$this->contentId][$fieldName]);

			// Besonderes Feld das fest in der Extension verbaut ist (password_confirm
[...]
				$valueCheck[$fieldName] = 'length';
								}
							}
						}
					}
					break;

			}

		}

		return $valueCheck;
	}

	";i:1;i:1;}s:12:"content_size";i:5467;s:13:"content_lines";i:166;s:6:"atLine";i:502;}i:11;a:7:{s:6:"header";s:29:"function requireCheckForm() {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:73:"

Ueberprueft ob alle benoetigten Felder mit Inhalten uebergeben wurden.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:5:"array";i:1;s:11:"$valueCheck";}}s:7:"content";a:2:{i:0;s:507:"		$valueCheck = array();

		// Geht alle benoetigten Felder durch und ermittelt fehlende.
		foreach ($this->arrRequiredFields as $fieldName) {
			// Ueberpruefen, ob das Feld ueberhaupt benoetigt wird.
			if (!in_array($fieldName, $this->arrUsedFields)) {
				continue;
			}

			// Ueberpruefen, ob ein Wert uebergeben wurde. Hierbei ist es wichtig um welchen Feldtyp es sich
[...]
ieldKey($fieldName)]) {
						$valueCheck[$fieldName] = 'required';
					}
					break;

			}
		}

		return $valueCheck;
	}

	";i:1;i:1;}s:12:"content_size";i:2003;s:13:"content_lines";i:46;s:6:"atLine";i:674;}i:13;a:7:{s:6:"header";s:39:"function generatePassword($fieldName) {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:125:"

Erstellt wenn gefordert ein Password, und verschluesselt dieses, oder das uebergebene, wenn es verschluesselt werden soll.
";s:5:"param";a:1:{i:0;a:2:{i:0;s:6:"string";i:1;s:10:"$fieldName";}}s:6:"return";a:2:{i:0;s:5:"array";i:1;s:9:"$password";}}s:7:"content";a:2:{i:0;s:507:"		$password = array();

		// Uebergebenes Password setzten.
		$password['normal'] = $this->piVars[$this->contentId][$fieldName];

		// Erstellt ein Password.
		if ($this->conf['showtype'] == 'register' && $this->conf['register.']['generatepassword.']['mode']) {
			$i = 1;
			$password['normal'] = '';
			$chars = '234567890abcdefghijkmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ
[...]
password['encrypted'] = $tx_t3secsaltedpw_phpass->getHashedPassword($password['normal']);
			}
		}

		return $password;
	}

	";i:1;i:1;}s:12:"content_size";i:2135;s:13:"content_lines";i:54;s:6:"atLine";i:727;}i:15;a:7:{s:6:"header";s:43:"function generatePasswordForMail($userId) {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:176:"

Erstellt ein neues Passwort, falls Passwort generieren eingestellt ist. Das Passwort kannn dann ueber den Marker "###PASSWORD###" mit der Registrierungsmail gesendet werden.
";s:5:"param";a:1:{i:0;a:2:{i:0;s:6:"string";i:1;s:7:"$userId";}}s:6:"return";a:2:{i:0;s:5:"array";i:1;s:13:"$extraMarkers";}}s:7:"content";a:2:{i:0;s:361:"		$extraMarkers = array();

		if ($this->conf['register.']['generatepassword.']['mode'] && $userId) {
			$password = $this->generatePassword('password');
			$extraMarkers['password'] = $password['normal'];
			$GLOBALS['TYPO3_DB']->exec_UPDATEquery('fe_users', 'uid = ' . $userId , array('password' => $password['encrypted']));
		}

		return $extraMarkers;
	}

	";i:1;i:0;}s:12:"content_size";i:361;s:13:"content_lines";i:11;s:6:"atLine";i:788;}i:17;a:7:{s:6:"header";s:62:"function checkPassword($submitedPassword, $originalPassword) {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:172:"

Ueberprueft anhand der aktuellen Verschluesselungsextension, ob das uebergebene unverschluesselte Passwort mit dem uebergebenen verschluesselten Passwort uebereinstimmt.
";s:5:"param";a:2:{i:0;a:2:{i:0;s:6:"string";i:1;s:17:"$submitedPassword";}i:1;a:2:{i:0;s:6:"string";i:1;s:17:"$originalPassword";}}s:6:"return";a:2:{i:0;s:7:"boolean";i:1;s:6:"$check";}}s:7:"content";a:2:{i:0;s:507:"		$check = false;

		// Wenn "saltedpasswords" installiert ist wird deren Konfiguration geholt, und je nach Einstellung das Password ueberprueft.
		if (t3lib_extMgm::isLoaded('saltedpasswords')) {
			$saltedpasswords = tx_saltedpasswords_div::returnExtConf();

			if ($saltedpasswords['enabled'] == 1) {
				$tx_saltedpasswords = t3lib_div::makeInstance($saltedpasswords['sal
[...]
schluesselung).
		else {
			if ($submitedPassword == $originalPassword) {
				$check = true;
			}
		}

		return $check;
	}

	";i:1;i:1;}s:12:"content_size";i:1684;s:13:"content_lines";i:48;s:6:"atLine";i:807;}i:19;a:7:{s:6:"header";s:51:"function saveDeleteImage($fieldName, &$arrUpdate) {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:80:"

The saveDeleteImage method is used to update or delete an image of an address
";s:5:"param";a:2:{i:0;a:2:{i:0;s:6:"string";i:1;s:10:"$fieldName";}i:1;a:2:{i:0;s:5:"array";i:1;s:68:"$arrUpdate // Call by reference Array mit allen zu updatenden Daten.";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:0:"";}}s:7:"content";a:2:{i:0;s:507:"		// Verzeichniss ermitteln.
		$uploadFolder = $this->feUsersTca['columns'][$fieldName]['config']['uploadfolder'];

		if (substr($uploadFolder, -1) != '/') {
			$uploadFolder = $uploadFolder . '/';
		}

		// Bild loeschen und ueberpruefen ob das Bild auch wirklich existiert.
		if ($this->piVars[$this->contentId][$fieldName . '_delete']) {
			$arrUpdate[$fieldName] = '';

	
[...]
;

				// Wenn Das Bild erfolgreich hochgeladen wurde, nichts zurueckgeben.
				return '';
			}
		}

		return 'upload';
	}

	";i:1;i:1;}s:12:"content_size";i:2486;s:13:"content_lines";i:73;s:6:"atLine";i:863;}i:21;a:7:{s:6:"header";s:77:"function showMessageOutputRedirect($mode, $submode = '', $params = array()) {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:174:"

Erledigt allen Output der nichts mit dem eigendlichen Formular zu tun hat.
Fuer besondere Faelle kann hier eine Ausnahme, oder zusaetzliche Konfigurationen gesetzt werden.
";s:5:"param";a:3:{i:0;a:2:{i:0;s:6:"string";i:1;s:5:"$mode";}i:1;a:2:{i:0;s:6:"string";i:1;s:8:"$submode";}i:2;a:2:{i:0;s:5:"array";i:1;s:7:"$params";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:6:"$label";}}s:7:"content";a:2:{i:0;s:507:"		$redirect = true;

		// Label ermitteln
		$label = $this->getLabel($mode . (($submode) ? '_' . $submode : ''));

		// Zusaetzliche Konfigurationen die gesetzt werden, bevor die Ausgabe oder der Redirect ausgefuehrt werden.
		switch ($mode) {

			case 'register':
				// Login vollziehen, falls eine Redirectseite angegeben ist, wird dorthin automatisch umgeleitet.
				if (
[...]
ct && $this->conf['redirect.'][$mode]) {
			$this->userRedirect($this->conf['redirect.'][$mode]);
		}

		return $label;
	}

	";i:1;i:1;}s:12:"content_size";i:2171;s:13:"content_lines";i:60;s:6:"atLine";i:946;}i:23;a:7:{s:6:"header";s:47:"function userAutoLogin($username, $mode = '') {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:43:"

Vollzieht einen Login ohne ein Passwort.
";s:5:"param";a:2:{i:0;a:2:{i:0;s:6:"string";i:1;s:9:"$username";}i:1;a:2:{i:0;s:6:"string";i:1;s:5:"$mode";}}s:6:"return";a:2:{i:0;s:4:"void";i:1;s:0:"";}}s:7:"content";a:2:{i:0;s:368:"		// Login vollziehen.
		$GLOBALS['TSFE']->fe_user->checkPid = 0;
		$info = $GLOBALS['TSFE']->fe_user->getAuthInfoArray();
		$user = $GLOBALS['TSFE']->fe_user->fetchUserRecord($info['db_user'], $username);
		$GLOBALS['TSFE']->fe_user->createUserSession($user);

		// Umleiten, damit der Login wirksam wird.
		$this->userRedirect($this->conf['redirect.'][$mode]);
	}

	";i:1;i:0;}s:12:"content_size";i:368;s:13:"content_lines";i:10;s:6:"atLine";i:1014;}i:25;a:7:{s:6:"header";s:36:"function userRedirect($pageId = 0) {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:82:"

Vollzieht einen Redirect mit der Seite die benutzt wird, oder auf die aktuelle.
";s:5:"param";a:1:{i:0;a:2:{i:0;s:7:"integer";i:1;s:7:"$pageId";}}s:6:"return";a:2:{i:0;s:4:"void";i:1;s:0:"";}}s:7:"content";a:2:{i:0;s:339:"		// Normalen Redirect, oder Redirect auf die gewuenschte Seite.
		if (!$pageId) {
			$pageId = $GLOBALS['TSFE']->id;
		}

		$pageLink = $this->pi_getPageLink($pageId);
		header('Location: ' . t3lib_div::getIndpEnv('TYPO3_SITE_URL') . $pageLink . ((strpos($pageLink, '?') === false) ? '?' : '&') . $this->makeHiddenParams());
		exit;
	}

	";i:1;i:0;}s:12:"content_size";i:339;s:13:"content_lines";i:10;s:6:"atLine";i:1031;}i:27;a:7:{s:6:"header";s:38:"function sendActivationMail($userId) {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:56:"

Sendet die Aktivierungsmail an den uebergebenen User.
";s:5:"param";a:1:{i:0;a:2:{i:0;s:7:"integer";i:1;s:7:"$userId";}}s:6:"return";a:2:{i:0;s:4:"void";i:1;s:0:"";}}s:7:"content";a:2:{i:0;s:507:"		// Neuen Timestamp setzten, damit jede Aktivierungsmail einen anderen Hash hat.
		$GLOBALS['TYPO3_DB']->exec_UPDATEquery('fe_users', 'uid = ' . intval($userId),array('tstamp' => time()));

		// Userdaten ermitteln.
		$res = $GLOBALS['TYPO3_DB']->exec_SELECTquery('uid, tstamp, username, email, tx_datamintsfeuser_approval_level', 'fe_users', 'uid = ' . intval($userId), '',
[...]
rs);

		// Cookie fuer das erneute zusenden des Aktivierungslinks setzten.
		$this->setNotActivatedCookie($row['uid']);
	}

	";i:1;i:1;}s:12:"content_size";i:2302;s:13:"content_lines";i:31;s:6:"atLine";i:1048;}i:29;a:7:{s:6:"header";s:37:"function makeApprovalCheck($userId) {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:89:"

Ueberprueft ob die Linkbestaetigung gueltig ist und aktiviert gegebenenfalls den User.
";s:5:"param";a:1:{i:0;a:2:{i:0;s:7:"integer";i:1;s:7:"$userId";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:0:"";}}s:7:"content";a:2:{i:0;s:507:"		// Userdaten ermitteln.
		$res = $GLOBALS['TYPO3_DB']->exec_SELECTquery('uid, tstamp, username, email, tx_datamintsfeuser_approval_level', 'fe_users', 'uid = ' . $userId, '', '', '1');
		$row = $GLOBALS['TYPO3_DB']->sql_fetch_assoc($res);

		// Genehmigungstyp ermitteln um die richtige E-Mail zu senden, bzw. die richtige Ausgabe zu ermitteln.
		$arrApprovalTypes = $this-
[...]
Ausgabe vorbereiten.
			$submode = 'deleted';
		}

		return $this->showMessageOutputRedirect($mode, $submode, $params);
	}

	";i:1;i:1;}s:12:"content_size";i:3181;s:13:"content_lines";i:67;s:6:"atLine";i:1086;}i:31;a:7:{s:6:"header";s:29:"function getApprovalTypes() {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:36:"

Ermittelt alle Genehmigungstypen.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:5:"array";i:1;s:0:"";}}s:7:"content";a:2:{i:0;s:404:"		// Genhemigungstypen aufsteigend sortiert ermitteln. Das ist nÃ¶tig um das Level dem richtigen Typ zuordnen zu kÃ¶nnen.
		// Beispiel: approvalcheck = ,doubleoptin,adminapproval => beim exploden kommt dann ein leeres Arrayelement herraus, das nach dem entfernen einen leeren Platz uebrig lÃ¤sst.
		return array_values(t3lib_div::trimExplode(',', $this->conf['register.']['approvalcheck'], true));
	}

	";i:1;i:0;}s:12:"content_size";i:404;s:13:"content_lines";i:5;s:6:"atLine";i:1159;}i:33;a:7:{s:6:"header";s:37:"function isAdminMail($approvalType) {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:177:"

Ueberprueft anhand des Genehmigungstyps ob die Mail eine Adminmail oder eine Usermail ist. Wenn 'admin' im Namen des Genehmigungstyps steht, dann ist die Mail eine Adminmail.
";s:5:"param";a:1:{i:0;a:2:{i:0;s:6:"string";i:1;s:13:"$approvalType";}}s:6:"return";a:2:{i:0;s:7:"boolean";i:1;s:0:"";}}s:7:"content";a:2:{i:0;s:73:"		return (strpos($approvalType, 'admin') === false) ? false : true;
	}

	";i:1;i:0;}s:12:"content_size";i:73;s:13:"content_lines";i:3;s:6:"atLine";i:1171;}i:35;a:7:{s:6:"header";s:41:"function setNotActivatedCookie($userId) {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:90:"

Setzt einen Cookie fuer den neu angelegten Account, falls dieser aktiviert werden muss.
";s:5:"param";a:1:{i:0;a:2:{i:0;s:7:"integer";i:1;s:7:"$userId";}}s:6:"return";a:2:{i:0;s:4:"void";i:1;s:0:"";}}s:7:"content";a:2:{i:0;s:211:"		$arrNotActivated = $this->getNotActivatedUserArray();
		$arrNotActivated[] = intval($userId);
		setcookie($this->prefixId . '[not_activated]', implode(',', $arrNotActivated), time() + 60 * 60 * 24 * 30);
	}

	";i:1;i:0;}s:12:"content_size";i:211;s:13:"content_lines";i:5;s:6:"atLine";i:1181;}i:37;a:7:{s:6:"header";s:63:"function getNotActivatedUserArray($arrNotActivated = array()) {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:63:"

Ermittelt alle nicht aktivierten Accounts des Users, falls .
";s:5:"param";a:1:{i:0;a:2:{i:0;s:5:"array";i:1;s:16:"$arrNotActivated";}}s:6:"return";a:2:{i:0;s:5:"array";i:1;s:23:"$arrNotActivatedCleaned";}}s:7:"content";a:2:{i:0;s:507:"		$arrNotActivatedCleaned = array();

		// Nicht aktivierte User ueber den Cookie ermitteln, und vor missbrauch schuetzen.
		if (!$arrNotActivated) {
			$arrNotActivated = array_unique(t3lib_div::trimExplode(',', $_COOKIE[$this->prefixId]['not_activated'], true));
		}

		foreach ($arrNotActivated as $key => $val) {
			$arrNotActivated[$key] = intval($val);
		}

		// Wenn n
[...]
DB']->sql_fetch_assoc($res)) {
				$arrNotActivatedCleaned[] = $row['uid'];
			}
		}

		return $arrNotActivatedCleaned;
	}

	";i:1;i:1;}s:12:"content_size";i:869;s:13:"content_lines";i:24;s:6:"atLine";i:1193;}i:39;a:7:{s:6:"header";s:114:"function sendMail($userId, $templatePart, $adminMail, $config, $extraMarkers = array(), $extraSuparts = array()) {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:100:"

Sendet die E-Mails mit dem uebergebenen Template und falls angegeben, auch mit den extra Markern.
";s:5:"param";a:6:{i:0;a:2:{i:0;s:7:"integer";i:1;s:7:"$userId";}i:1;a:2:{i:0;s:6:"string";i:1;s:13:"$templatePart";}i:2;a:2:{i:0;s:7:"boolean";i:1;s:10:"$adminMail";}i:3;a:2:{i:0;s:5:"array";i:1;s:7:"$config";}i:4;a:2:{i:0;s:5:"array";i:1;s:13:"$extraMarkers";}i:5;a:2:{i:0;s:5:"array";i:1;s:13:"$extraSuparts";}}s:6:"return";a:2:{i:0;s:4:"void";i:1;s:0:"";}}s:7:"content";a:2:{i:0;s:507:"		// Userdaten ermitteln.
		$res = $GLOBALS['TYPO3_DB']->exec_SELECTquery('*', 'fe_users', 'uid = ' . intval($userId), '', '', '1');
		$row = $GLOBALS['TYPO3_DB']->sql_fetch_assoc($res);

		$markerArray = array_merge((array)$row, (array)$extraMarkers);

		foreach ($markerArray as $key => $val) {
			if (!$this->checkUtf8($val)) {
				$markerArray[$key] = utf8_encode($val);

[...]
 Verschicke E-Mail.
		if ($recipient && $subject && $template) {
			mail($recipient, $subject, $template, $header);
		}
	}

	";i:1;i:1;}s:12:"content_size";i:3018;s:13:"content_lines";i:87;s:6:"atLine";i:1229;}i:41;a:7:{s:6:"header";s:77:"function getTemplateSubpart($templatePart, $config, $markerArray = array()) {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:74:"

Holt einen Subpart des Standardtemplates und ersetzt uebergeben Marker.
";s:5:"param";a:3:{i:0;a:2:{i:0;s:6:"string";i:1;s:13:"$templatePart";}i:1;a:2:{i:0;s:5:"array";i:1;s:7:"$config";}i:2;a:2:{i:0;s:5:"array";i:1;s:12:"$markerArray";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:9:"$template";}}s:7:"content";a:2:{i:0;s:542:"		// Template holen.
		$templateFile = $config['emailtemplate'];

		if (!$templateFile) {
			$templateFile = 'EXT:' . $this->extKey . '/res/datamints_feuser_mail.html';
		}

		// Template laden.
		$template = $this->cObj->fileResource($templateFile);
		$template = $this->cObj->getSubpart($template, '###' . strtoupper($templatePart) . '###');

		if (!$this->checkUtf8($template)) {
			$template = utf8_encode($template);
		}

		$template = $this->cObj->substituteMarkerArray($template, $markerArray, '###|###', 1);

		return $template;
	}

	";i:1;i:0;}s:12:"content_size";i:542;s:13:"content_lines";i:20;s:6:"atLine";i:1325;}i:43;a:7:{s:6:"header";s:50:"function getChangedForMail($arrNewData, $config) {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:72:"

Ermittlet alle geÃ¤nderten Daten und schreibt sie in ein Markerarray.
";s:5:"param";a:2:{i:0;a:2:{i:0;s:5:"array";i:1;s:11:"$arrNewData";}i:1;a:2:{i:0;s:5:"array";i:1;s:7:"$config";}}s:6:"return";a:2:{i:0;s:5:"array";i:1;s:13:"$extraMarkers";}}s:7:"content";a:2:{i:0;s:507:"		$count = 0;
		$extraMarkers = array();
		$template =  $this->getTemplateSubpart('changed_items', $config);

		foreach ($arrNewData as $key => $val) {
			if (in_array($key, $this->arrUsedFields)) {
				if ($val != $GLOBALS['TSFE']->fe_user->user[$key]) {
					$markerArray = array();
					$markerArray['value_old'] = $GLOBALS['TSFE']->fe_user->user[$key];
					$markerArray[
[...]

				}
			}
		}

		if (!$count) {
			$extraMarkers['nothing_changed'] = 'nothing_changed';
		}

		return $extraMarkers;
	}

	";i:1;i:1;}s:12:"content_size";i:898;s:13:"content_lines";i:32;s:6:"atLine";i:1353;}i:45;a:7:{s:6:"header";s:42:"function showForm($valueCheck = array()) {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:111:"

Gibt alle im Backend definierten Felder (TypoScipt/Flexform) formatiert und der Anzeigeart entsprechend aus.
";s:5:"param";a:1:{i:0;a:2:{i:0;s:5:"array";i:1;s:11:"$valueCheck";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:8:"$content";}}s:7:"content";a:2:{i:0;s:507:"		$arrCurrentData = array();

		// Beim editieren der Userdaten, die Felder vorausfuellen.
		if ($this->conf['showtype'] == 'edit' && $this->userId) {
			$res = $GLOBALS['TYPO3_DB']->exec_SELECTquery('*', 'fe_users', 'uid = ' . $this->userId , '', '', '1');
            $row = $GLOBALS['TYPO3_DB']->sql_fetch_assoc($res);

			$arrCurrentData = $row;
		}

		// Wenn das Formul
[...]
>';
		$content .= $this->makeHiddenFields();

		$content .= '</fieldset>';
		$content .= '</form>';

		return $content;
	}

	";i:1;i:1;}s:12:"content_size";i:9658;s:13:"content_lines";i:211;s:6:"atLine";i:1392;}i:47;a:7:{s:6:"header";s:43:"function cleanSpecialFieldKey($fieldName) {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:113:"

Ersetzt die beim Eingeben angegebenen '--' Zeichen vor und hinter dem eigendlichen Feldnamen, falls vorhanden.
";s:5:"param";a:1:{i:0;a:2:{i:0;s:6:"string";i:1;s:10:"$fieldName";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:0:"";}}s:7:"content";a:2:{i:0;s:134:"		if (preg_match('/^--.*--$/', $fieldName)) {
			return preg_replace('/^--(.*)--$/', '\1', $fieldName);
		}
		return $fieldName;
	}

	";i:1;i:0;}s:12:"content_size";i:134;s:13:"content_lines";i:6;s:6:"atLine";i:1610;}i:49;a:7:{s:6:"header";s:57:"function showInput($fieldName, $arrCurrentData, $iItem) {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:23:"

Rendert Inputfelder.
";s:5:"param";a:3:{i:0;a:2:{i:0;s:6:"string";i:1;s:10:"$fieldName";}i:1;a:2:{i:0;s:5:"array";i:1;s:15:"$arrCurrentData";}i:2;a:2:{i:0;s:7:"integer";i:1;s:6:"$iItem";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:8:"$content";}}s:7:"content";a:2:{i:0;s:507:"		$content = '';

		// Datumsfeld.
		if (strpos($this->feUsersTca['columns'][$fieldName]['config']['eval'], 'date') !== false) {
			// Timestamp zu "tt.mm.jjjj" machen.
			if ($arrCurrentData[$fieldName] != 0) {
				$datum = strftime('%d.%m.%Y', $arrCurrentData[$fieldName]);
			}

			$content .= '<input type="text" id="' . $this->extKey . '_' . $this->contentId . '_' . $fi
[...]
ntentId . '][' . $fieldName . ']" value="' . $arrCurrentData[$fieldName] . '"' . $readOnly . ' />';

		return $content;
	}

	";i:1;i:1;}s:12:"content_size";i:1911;s:13:"content_lines";i:31;s:6:"atLine";i:1625;}i:51;a:7:{s:6:"header";s:48:"function showText($fieldName, $arrCurrentData) {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:21:"

Rendert Textareas.
";s:5:"param";a:2:{i:0;a:2:{i:0;s:6:"string";i:1;s:10:"$fieldName";}i:1;a:2:{i:0;s:5:"array";i:1;s:15:"$arrCurrentData";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:8:"$content";}}s:7:"content";a:2:{i:0;s:416:"		$content = '';

		$readOnly = ($this->feUsersTca['columns'][$fieldName]['config']['readOnly'] == 1) ? ' readonly="readonly"' : '';
		$content .= '<textarea id="' . $this->extKey . '_' . $this->contentId . '_' . $fieldName . '" name="' . $this->prefixId . '[' . $this->contentId . '][' . $fieldName . ']" rows="2" cols="42"' . $readOnly . '>' . $arrCurrentData[$fieldName] . '</textarea>';

		return $content;
	}

	";i:1;i:0;}s:12:"content_size";i:416;s:13:"content_lines";i:8;s:6:"atLine";i:1664;}i:53;a:7:{s:6:"header";s:49:"function showCheck($fieldName, $arrCurrentData) {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:22:"

Rendert Checkboxen.
";s:5:"param";a:2:{i:0;a:2:{i:0;s:6:"string";i:1;s:10:"$fieldName";}i:1;a:2:{i:0;s:5:"array";i:1;s:15:"$arrCurrentData";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:8:"$content";}}s:7:"content";a:2:{i:0;s:337:"		$content = '';

		$checked = ($arrCurrentData[$fieldName] == 1) ? ' checked="checked"' : '';
		$content .= '<input type="checkbox" id="' . $this->extKey . '_' . $this->contentId . '_' . $fieldName . '" name="' . $this->prefixId . '[' . $this->contentId . '][' . $fieldName . ']" value="1"' . $checked . ' />';

		return $content;
	}

	";i:1;i:0;}s:12:"content_size";i:337;s:13:"content_lines";i:8;s:6:"atLine";i:1680;}i:55;a:7:{s:6:"header";s:49:"function showRadio($fieldName, $arrCurrentData) {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:24:"

Rendert Radiobuttons.
";s:5:"param";a:2:{i:0;a:2:{i:0;s:6:"string";i:1;s:10:"$fieldName";}i:1;a:2:{i:0;s:5:"array";i:1;s:15:"$arrCurrentData";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:8:"$content";}}s:7:"content";a:2:{i:0;s:507:"		$content = '';

		$content .= '<div class="radio_item_wrapper">';

		for ($i = 0; $i < count($this->feUsersTca['columns'][$fieldName]['config']['items']); $i++) {
			$label = $this->feUsersTca['columns'][$fieldName]['config']['items'][$i][0];
			$value = $this->feUsersTca['columns'][$fieldName]['config']['items'][$i][1];
			$checked = ($arrCurrentData[$fieldName] == $val
[...]
>getLabel($label);
			$content .= '</label>';
			$content .= '</div>';
		}

		$content .= '</div>';

		return $content;
	}

	";i:1;i:1;}s:12:"content_size";i:1081;s:13:"content_lines";i:22;s:6:"atLine";i:1696;}i:57;a:7:{s:6:"header";s:50:"function showSelect($fieldName, $arrCurrentData) {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:24:"

Rendert Selectfelder.
";s:5:"param";a:2:{i:0;a:2:{i:0;s:6:"string";i:1;s:10:"$fieldName";}i:1;a:2:{i:0;s:5:"array";i:1;s:15:"$arrCurrentData";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:8:"$content";}}s:7:"content";a:2:{i:0;s:507:"		$content = '';
		$optionlist = '';
		$countSelectFields = count($this->feUsersTca['columns'][$fieldName]['config']['items']);

		// Moeglichkeit das der gespeicherte Wert eine kommseparierte Liste ist, daher aufsplitten in ein Array, wie es auch von einem abgesendeten Formular kommen wuerde.
		if (!is_array($arrCurrentData[$fieldName])) {
			$arrCurrentData[$fieldName] =
[...]
>contentId . '][' . $fieldName . ']">';
			$content .= $optionlist;
			$content .= '</select>';
		}

		return $content;
	}

	";i:1;i:1;}s:12:"content_size";i:2417;s:13:"content_lines";i:45;s:6:"atLine";i:1726;}i:59;a:7:{s:6:"header";s:49:"function showGroup($fieldName, $arrCurrentData) {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:23:"

Rendert Groupfelder.
";s:5:"param";a:2:{i:0;a:2:{i:0;s:6:"string";i:1;s:10:"$fieldName";}i:1;a:2:{i:0;s:5:"array";i:1;s:15:"$arrCurrentData";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:8:"$content";}}s:7:"content";a:2:{i:0;s:507:"		$content = '';

		// GROUP (z.B. Files oder externe Tabellen).
		// Wenn es sich um den "internal_type" FILE handelt && es ein Bild ist, dann ein Vorschaubild erstellen und ein File-Inputfeld anzeigen.
		if ($this->feUsersTca['columns'][$fieldName]['config']['internal_type'] == 'file') {
			// Verzeichniss ermitteln.
			$uploadFolder = $this->feUsersTca['columns'][$field
[...]
e . '_item_' . $key . '">'. $label . '</label></div>';
				$i++;
			}

			$content .= '</div>';
		}

		return $content;
	}

	";i:1;i:1;}s:12:"content_size";i:3609;s:13:"content_lines";i:77;s:6:"atLine";i:1779;}i:61;a:7:{s:6:"header";s:29:"function makeHiddenFields() {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:77:"

Erstellt Hidden Fields fuer vordefinierte Parameter die uebergeben wurden.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:8:"$content";}}s:7:"content";a:2:{i:0;s:260:"		$content = '';

		foreach ($this->arrHiddenParams as $paramName) {
			if ($_REQUEST[$paramName]) {
				$content .= '<input type="hidden" name="' . $paramName . '" value="' . htmlspecialchars($_REQUEST[$paramName]) . '" />';
			}
		}

		return $content;
	}

	";i:1;i:0;}s:12:"content_size";i:260;s:13:"content_lines";i:11;s:6:"atLine";i:1862;}i:63;a:7:{s:6:"header";s:29:"function makeHiddenParams() {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:77:"

Erstellt GET-Parameter fuer vordefinierte Parameter die uebergeben wurden.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:7:"$params";}}s:7:"content";a:2:{i:0;s:234:"		$params = '';

		foreach ($this->arrHiddenParams as $paramName) {
			if ($_REQUEST[$paramName]) {
				$params .= '&' . urlencode($paramName) . '=' . $this->cleanHeaderUrlData($_REQUEST[$paramName]);
			}
		}

		return $params;
	}

	";i:1;i:0;}s:12:"content_size";i:234;s:13:"content_lines";i:11;s:6:"atLine";i:1879;}i:65;a:7:{s:6:"header";s:36:"function cleanHeaderUrlData($data) {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:80:"

Konvertiert einen String um ihn in der PHP Funktion header nutzen zu koennen.
";s:5:"param";a:1:{i:0;a:2:{i:0;s:6:"string";i:1;s:5:"$data";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:5:"$data";}}s:7:"content";a:2:{i:0;s:92:"		$data = urlencode(strip_tags(preg_replace("/[\r\n]/", '', $data)));

		return $data;
	}

	";i:1;i:0;}s:12:"content_size";i:92;s:13:"content_lines";i:5;s:6:"atLine";i:1897;}i:67;a:7:{s:6:"header";s:38:"function checkIfRequired($fieldName) {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:82:"

Ueberprueft ob das uebergebene Feld benoetigt wird um erfolgreich zu speichern.
";s:5:"param";a:1:{i:0;a:2:{i:0;s:6:"string";i:1;s:10:"$fieldName";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:0:"";}}s:7:"content";a:2:{i:0;s:146:"		if (array_intersect(array($fieldName, '--' . $fieldName . '--'), $this->arrRequiredFields)) {
			return ' *';
		} else {
			return '';
		}
	}

	";i:1;i:0;}s:12:"content_size";i:146;s:13:"content_lines";i:7;s:6:"atLine";i:1909;}i:69;a:7:{s:6:"header";s:31:"function getLabel($fieldName) {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:186:"

Ermittelt ein bestimmtes Label aufgrund des im TCA gespeicherten Languagestrings, des Datenbankfeldnamens oder gibt einfach den uebergeben Wert wieder aus, wenn nichts gefunden wurde.
";s:5:"param";a:1:{i:0;a:2:{i:0;s:6:"string";i:1;s:10:"$fieldName";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:6:"$label";}}s:7:"content";a:2:{i:0;s:507:"		if (strpos($fieldName, 'LLL:') === false) {
			// Label aus der Konfiguration holen basierend auf dem Datenbankfeldnamen.
			$label = $this->pi_getLL($fieldName);

			// Das Label zurueckliefern, falls vorhanden.
			if ($label) {
				return $label . $this->checkIfRequired($fieldName);
			}

			// LanguageString ermitteln.
			$languageString = $this->feUsersTca['columns']
[...]
s gefunden wurde den uebergebenen Wert wieder zurueckliefern.
		return $fieldName . $this->checkIfRequired($fieldName);
	}

	";i:1;i:1;}s:12:"content_size";i:1297;s:13:"content_lines";i:33;s:6:"atLine";i:1923;}i:71;a:7:{s:6:"header";s:49:"function getErrorLabel($fieldName, $valueCheck) {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:47:"

Ermittelt das Error Lebel aus dem feldnamen.
";s:5:"param";a:2:{i:0;a:2:{i:0;s:6:"string";i:1;s:10:"$fieldName";}i:1;a:2:{i:0;s:5:"array";i:1;s:11:"$valueCheck";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:0:"";}}s:7:"content";a:2:{i:0;s:310:"		$label = '';

		// Extra Error Label ermitteln.
		if (array_key_exists($fieldName, $valueCheck) && is_string($valueCheck[$fieldName])) {
			$label = '<div class="form_error ' . $fieldName . '_error">' . $this->getLabel($fieldName . '_error_' . $valueCheck[$fieldName]) . '</div>';
		}

		return $label;
	}

	";i:1;i:0;}s:12:"content_size";i:310;s:13:"content_lines";i:10;s:6:"atLine";i:1964;}i:73;a:7:{s:6:"header";s:29:"function getConfiguration() {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:5:{s:4:"text";s:123:"

Holt Konfigurationen aus der Flexform (Tab-bedingt) und ersetzt diese pro Konfiguration in der TypoScript Konfiguration.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:4:"void";i:1;s:0:"";}s:5:"other";a:2:{i:0;s:22:"@global	$this->extConf";i:1;s:19:"@global	$this->conf";}s:11:"other_index";a:1:{s:7:"@global";a:2:{i:0;s:15:"$this->extConf ";i:1;s:12:"$this->conf ";}}}s:7:"content";a:2:{i:0;s:507:"		$conf = array();

		// Extension Konfiguration ermitteln.
		$this->extConf = unserialize($GLOBALS['TYPO3_CONF_VARS']['EXT']['extConf'][$this->extKey]);

		// Alle Tabs der Flexformkonfiguration durchgehn.
		foreach ($this->cObj->data['pi_flexform']['data'] as $tabKey => $val) {
			$this->readFlexformTab($this->cObj->data['pi_flexform'], $conf, $tabKey);
		}

		// Alle ge
[...]
namen sind fuer konfigurierte Felder und fuer input Felder).
		$this->arrRequiredFields[] = '--passwordconfirmation--';
	}

	";i:1;i:1;}s:12:"content_size";i:1580;s:13:"content_lines";i:36;s:6:"atLine";i:1982;}i:75;a:7:{s:6:"header";s:52:"function readFlexformTab($flexData, &$conf, $sTab) {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:76:"

Parst das Flexform Konfigurations Array und schreibt alle Werte in $conf.
";s:5:"param";a:3:{i:0;a:2:{i:0;s:5:"array";i:1;s:9:"$flexData";}i:1;a:2:{i:0;s:5:"array";i:1;s:63:"$conf // Call by reference Array mit allen zu updatenden Daten.";}i:2;a:2:{i:0;s:6:"string";i:1;s:6:"$sType";}}s:6:"return";a:2:{i:0;s:4:"void";i:1;s:0:"";}}s:7:"content";a:2:{i:0;s:507:"		 if (is_array($flexData)) {
			 if (isset($flexData['data'][$sTab]['lDEF'])) {
				 $flexData = $flexData['data'][$sTab]['lDEF'];
			 }

			 foreach ($flexData as $key => $value) {
				 if (is_array($value['el']) && count($value['el']) > 0) {
					 foreach ($value['el'] as $ekey => $element) {
						 if (isset($element['vDEF'])) {
							 $conf[$ekey] = $element['vDEF'];
[...]
($value['el'], $conf, $sTab);
				 }

				 if ($value['vDEF']) {
					 $conf[$key] = $value['vDEF'];
				 }
			 }
		 }
	 }

	";i:1;i:1;}s:12:"content_size";i:645;s:13:"content_lines";i:25;s:6:"atLine";i:2027;}i:77;a:7:{s:6:"header";s:49:"function setFlexformConfiguration($key, $value) {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:5:{s:4:"text";s:106:"

Ueberschreibt eventuell vorhandene TypoScript Konfigurationen mit den Konfigurationen aus der Flexform.
";s:5:"param";a:2:{i:0;a:2:{i:0;s:6:"string";i:1;s:4:"$key";}i:1;a:2:{i:0;s:6:"string";i:1;s:6:"$value";}}s:6:"return";a:2:{i:0;s:4:"void";i:1;s:0:"";}s:5:"other";a:1:{i:0;s:19:"@global	$this->conf";}s:11:"other_index";a:1:{s:7:"@global";a:1:{i:0;s:12:"$this->conf ";}}}s:7:"content";a:2:{i:0;s:484:"		if (strpos($key, '.') !== false && $value) {
			$arrKey = t3lib_div::trimExplode('.', $key);

			for ($i = count($arrKey) - 1; $i >= 0; $i--) {
				$newValue = array();

				if ($i == count($arrKey) - 1) {
					$newValue[$arrKey[$i]] = $value;
				} else {
					$newValue[$arrKey[$i] . '.'] = $value;
				}

				$value = $newValue;
			}

			$this->conf = t3lib_div::array_merge_recursive_overrule($this->conf, $value);
		} else if ($value) {
			$this->conf[$key] = $value;
		}
	}

	";i:1;i:0;}s:12:"content_size";i:484;s:13:"content_lines";i:21;s:6:"atLine";i:2061;}i:79;a:7:{s:6:"header";s:33:"function setIrreConfiguration() {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:5:{s:4:"text";s:128:"

Ueberschreibt eventuell vorhandene TypoScript Konfigurationen oder Flexform Konfigurationen mit den Konfigurationen aus IRRE.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:4:"void";i:1;s:0:"";}s:5:"other";a:1:{i:0;s:19:"@global	$this->conf";}s:11:"other_index";a:1:{s:7:"@global";a:1:{i:0;s:12:"$this->conf ";}}}s:7:"content";a:2:{i:0;s:507:"		$infoitems = 1;
		$fieldsets = 2;
		$userdeleteCounter = 0;
		$passwordconfirmationCounter = 0;
		$resendactivationCounter = 0;
		$usedfields = array();
		$requiredfields = array();
		$uniquefields = array();
		$firstkey = key($this->conf['databasefields']);

		foreach ($this->conf['databasefields'] as $position => $field) {
			// Datenbankfelder abarbeiten.
			if ($fiel
[...]
s->conf['requiredfields'] = implode(',', $requiredfields);
		$this->conf['uniquefields'] = implode(',', $uniquefields);
	}

	";i:1;i:1;}s:12:"content_size";i:3493;s:13:"content_lines";i:123;s:6:"atLine";i:2089;}i:81;a:7:{s:6:"header";s:41:"function getJSValidationConfiguration() {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:96:"

Gibt die komplette Validierungskonfiguration fuer die JavaScript Frontendvalidierung zurueck.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:14:"$configuration";}}s:7:"content";a:2:{i:0;s:507:"		// Hier eine fertig generierte Konfiguration:
		// config[11]=[];
		// config[11]["username"]=[];
		// config[11]["username"]["validation"]=[];
		// config[11]["username"]["validation"]["type"]="username";
		// config[11]["username"]["valid"]="Der Benutzername darf keine Leerzeichen beinhalten!";
		// config[11]["username"]["required"]="Es muss ein Benutzername eingegebe
[...]
 $arrValidationFields) . '");contentids[' . $this->contentId . ']=' . $this->contentId . ';';

		return $configuration;
	}

	";i:1;i:1;}s:12:"content_size";i:5907;s:13:"content_lines";i:107;s:6:"atLine";i:2218;}i:83;a:7:{s:6:"header";s:26:"function getFeUsersTca() {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:5:{s:4:"text";s:85:"

Ueberschreibt eventuell vorhandene TCA Konfiguration mit TypoScript Konfiguration.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:4:"void";i:1;s:0:"";}s:5:"other";a:1:{i:0;s:25:"@global	$this->feUsersTca";}s:11:"other_index";a:1:{s:7:"@global";a:1:{i:0;s:18:"$this->feUsersTca ";}}}s:7:"content";a:2:{i:0;s:311:"		$GLOBALS['TSFE']->includeTCA();
		$this->feUsersTca = $GLOBALS['TCA']['fe_users'];
		if ($this->conf['fieldconfig.']) {
			$this->feUsersTca['columns'] = t3lib_div::array_merge_recursive_overrule((array)$this->feUsersTca['columns'], (array)$this->deletePointInArrayKey($this->conf['fieldconfig.']));
		}
	}

	";i:1;i:0;}s:12:"content_size";i:311;s:13:"content_lines";i:7;s:6:"atLine";i:2332;}i:85;a:7:{s:6:"header";s:26:"function getStoragePid() {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:5:{s:4:"text";s:86:"

Ermittelt die General Record Storage Pid bzw. den vom User festgelegten Userfolder.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:4:"void";i:1;s:0:"";}s:5:"other";a:1:{i:0;s:25:"@global	$this->storagePid";}s:11:"other_index";a:1:{s:7:"@global";a:1:{i:0;s:18:"$this->storagePid ";}}}s:7:"content";a:2:{i:0;s:218:"		$this->storagePid = $this->conf['register.']['userfolder'];
		if (!$this->storagePid) {
			$arrayRootPids = $GLOBALS['TSFE']->getStorageSiterootPids();
			$this->storagePid = $arrayRootPids['_STORAGE_PID'];
		}
	}

	";i:1;i:0;}s:12:"content_size";i:218;s:13:"content_lines";i:7;s:6:"atLine";i:2346;}i:87;a:7:{s:6:"header";s:40:"function deletePointInArrayKey($array) {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:76:"

Loescht den Punkt den Typo3 bei TypoScript-Variablen (Arrays) hinzufuegt.
";s:5:"param";a:1:{i:0;a:2:{i:0;s:5:"array";i:1;s:6:"$array";}}s:6:"return";a:2:{i:0;s:5:"array";i:1;s:9:"$newArray";}}s:7:"content";a:2:{i:0;s:507:"		// Neues Array erstellen um das alte Array nicht zu ueberschreiben.
		$newArray = array();

		// Alle Elemente des Arrays durchgehen.
		foreach ($array as $key => $val) {
			if (is_array($val)) {
				// Wenn der Inhalt des Elements ein Array ist, letztes Zeichen entfernen (Punkt).
				$newKey = substr($key, 0, -1);

				// Da das Array recursiv sein kann Funktion erneut 
[...]
 = $key;
				$newVal = $val;
			}

			// Neues Array fuellen.
			$newArray[$newKey] = $newVal;
		}

		return $newArray;
	}

	";i:1;i:1;}s:12:"content_size";i:661;s:13:"content_lines";i:24;s:6:"atLine";i:2360;}i:89;a:4:{s:6:"header";s:26:"function checkUtf8($str) {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:45:"

Checks if a string is utf8 encoded or not.
";s:5:"param";a:1:{i:0;a:2:{i:0;s:6:"string";i:1;s:4:"$str";}}s:6:"return";a:2:{i:0;s:7:"boolean";i:1;s:0:"";}}s:6:"atLine";i:2391;}i:91;a:7:{s:6:"header";s:29:"function cleanArray($array) {";s:11:"parentClass";s:22:"tx_datamintsfeuser_pi1";s:4:"cDat";a:3:{s:4:"text";s:43:"

Cleans an array from all empty elements.
";s:5:"param";a:1:{i:0;a:2:{i:0;s:6:"string";i:1;s:6:"$array";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:0:"";}}s:7:"content";a:2:{i:0;s:369:"		foreach ($array as $key => $val) {
			if (!$val) {
				unset($array[$key]);
			}
		}

		return $array;
	}


}



if (defined('TYPO3_MODE') && $TYPO3_CONF_VARS[TYPO3_MODE]['XCLASS']['ext/datamints_feuser/pi1/class.tx_datamintsfeuser_pi1.php'])	{
	include_once($TYPO3_CONF_VARS[TYPO3_MODE]['XCLASS']['ext/datamints_feuser/pi1/class.tx_datamintsfeuser_pi1.php']);
}

?>
";i:1;i:0;}s:12:"content_size";i:369;s:13:"content_lines";i:19;s:6:"atLine";i:2435;}}s:10:"usageCount";a:46:{s:12:"H_6670368143";a:2:{s:24:"_searchtime_milliseconds";d:44;s:15:"_functionHeader";s:51:"class tx_datamintsfeuser_pi1 extends tslib_pibase {";}s:12:"H_12a661a898";a:2:{s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:32:"function main($content, $conf) {";}s:12:"H_da0e5daf7b";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:11;s:15:"_functionHeader";s:21:"function sendForm() {";}s:12:"H_e94cbdddc4";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:28:"function uniqueCheckForm() {";}s:12:"H_3fb0fa095c";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:2;s:15:"_functionHeader";s:25:"function validateForm() {";}s:12:"H_43e13b34ec";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:29:"function requireCheckForm() {";}s:12:"H_848a953766";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:2;s:5:"TOTAL";i:2;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:2;s:5:"TOTAL";i:2;}s:24:"_searchtime_milliseconds";d:15;s:15:"_functionHeader";s:39:"function generatePassword($fieldName) {";}s:12:"H_c27c6a15cb";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:2;s:5:"TOTAL";i:2;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:2;s:5:"TOTAL";i:2;}s:24:"_searchtime_milliseconds";d:14;s:15:"_functionHeader";s:43:"function generatePasswordForMail($userId) {";}s:12:"H_921cd090f1";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:3;s:5:"TOTAL";i:3;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:3;s:5:"TOTAL";i:3;}s:24:"_searchtime_milliseconds";d:5;s:15:"_functionHeader";s:62:"function checkPassword($submitedPassword, $originalPassword) {";}s:12:"H_03a6558032";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:2;s:15:"_functionHeader";s:51:"function saveDeleteImage($fieldName, &$arrUpdate) {";}s:12:"H_5ca8c95dc2";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:5;s:5:"TOTAL";i:5;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:5;s:5:"TOTAL";i:5;}s:24:"_searchtime_milliseconds";d:15;s:15:"_functionHeader";s:77:"function showMessageOutputRedirect($mode, $submode = '', $params = array()) {";}s:12:"H_20a91daed8";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:2;s:5:"TOTAL";i:2;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:2;s:5:"TOTAL";i:2;}s:24:"_searchtime_milliseconds";d:5;s:15:"_functionHeader";s:47:"function userAutoLogin($username, $mode = '') {";}s:12:"H_500dc08da5";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:2;s:5:"TOTAL";i:2;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:2;s:5:"TOTAL";i:2;}s:24:"_searchtime_milliseconds";d:5;s:15:"_functionHeader";s:36:"function userRedirect($pageId = 0) {";}s:12:"H_bfaeaa89c4";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:3;s:5:"TOTAL";i:3;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:3;s:5:"TOTAL";i:3;}s:24:"_searchtime_milliseconds";d:8;s:15:"_functionHeader";s:38:"function sendActivationMail($userId) {";}s:12:"H_eaaa1762fc";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:2;s:15:"_functionHeader";s:37:"function makeApprovalCheck($userId) {";}s:12:"H_fcef8d1a47";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:4;s:5:"TOTAL";i:4;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:4;s:5:"TOTAL";i:4;}s:24:"_searchtime_milliseconds";d:7;s:15:"_functionHeader";s:29:"function getApprovalTypes() {";}s:12:"H_006a316cc0";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:3;s:5:"TOTAL";i:3;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:3;s:5:"TOTAL";i:3;}s:24:"_searchtime_milliseconds";d:6;s:15:"_functionHeader";s:37:"function isAdminMail($approvalType) {";}s:12:"H_6a64dddd97";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:8;s:15:"_functionHeader";s:41:"function setNotActivatedCookie($userId) {";}s:12:"H_9d84f4fc50";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:3;s:5:"TOTAL";i:3;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:3;s:5:"TOTAL";i:3;}s:24:"_searchtime_milliseconds";d:19;s:15:"_functionHeader";s:63:"function getNotActivatedUserArray($arrNotActivated = array()) {";}s:12:"H_c1ed18eee0";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:8;s:5:"TOTAL";i:8;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:8;s:5:"TOTAL";i:8;}s:24:"_searchtime_milliseconds";d:11;s:15:"_functionHeader";s:114:"function sendMail($userId, $templatePart, $adminMail, $config, $extraMarkers = array(), $extraSuparts = array()) {";}s:12:"H_baafc6c333";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:3;s:5:"TOTAL";i:3;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:3;s:5:"TOTAL";i:3;}s:24:"_searchtime_milliseconds";d:10;s:15:"_functionHeader";s:77:"function getTemplateSubpart($templatePart, $config, $markerArray = array()) {";}s:12:"H_28c1e00aca";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:2;s:15:"_functionHeader";s:50:"function getChangedForMail($arrNewData, $config) {";}s:12:"H_14be5b66fd";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:3;s:5:"TOTAL";i:3;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:3;s:5:"TOTAL";i:3;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:42:"function showForm($valueCheck = array()) {";}s:12:"H_bac26dec65";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:11;s:5:"TOTAL";i:11;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:11;s:5:"TOTAL";i:11;}s:24:"_searchtime_milliseconds";d:12;s:15:"_functionHeader";s:43:"function cleanSpecialFieldKey($fieldName) {";}s:12:"H_07e0150ccb";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:7;s:15:"_functionHeader";s:57:"function showInput($fieldName, $arrCurrentData, $iItem) {";}s:12:"H_11d491b1ee";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:7;s:15:"_functionHeader";s:48:"function showText($fieldName, $arrCurrentData) {";}s:12:"H_021e4f532c";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:7;s:15:"_functionHeader";s:49:"function showCheck($fieldName, $arrCurrentData) {";}s:12:"H_9f831895a5";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:7;s:15:"_functionHeader";s:49:"function showRadio($fieldName, $arrCurrentData) {";}s:12:"H_dde7d2ec74";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:8;s:15:"_functionHeader";s:50:"function showSelect($fieldName, $arrCurrentData) {";}s:12:"H_a271bb8626";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:7;s:15:"_functionHeader";s:49:"function showGroup($fieldName, $arrCurrentData) {";}s:12:"H_f2e5e0153c";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:10;s:15:"_functionHeader";s:29:"function makeHiddenFields() {";}s:12:"H_9b86b03ef8";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:3;s:5:"TOTAL";i:3;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:3;s:5:"TOTAL";i:3;}s:24:"_searchtime_milliseconds";d:7;s:15:"_functionHeader";s:29:"function makeHiddenParams() {";}s:12:"H_68634eff2e";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:13;s:15:"_functionHeader";s:36:"function cleanHeaderUrlData($data) {";}s:12:"H_2d8afb1caa";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:4;s:5:"TOTAL";i:4;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:4;s:5:"TOTAL";i:4;}s:24:"_searchtime_milliseconds";d:12;s:15:"_functionHeader";s:38:"function checkIfRequired($fieldName) {";}s:12:"H_8e24527376";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:16;s:5:"TOTAL";i:16;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:16;s:5:"TOTAL";i:16;}s:24:"_searchtime_milliseconds";d:11;s:15:"_functionHeader";s:31:"function getLabel($fieldName) {";}s:12:"H_8d24a6b0ba";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:4;s:5:"TOTAL";i:4;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:4;s:5:"TOTAL";i:4;}s:24:"_searchtime_milliseconds";d:9;s:15:"_functionHeader";s:49:"function getErrorLabel($fieldName, $valueCheck) {";}s:12:"H_76555fc26a";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:29:"function getConfiguration() {";}s:12:"H_4c3903bc2e";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:3;s:5:"TOTAL";i:3;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:3;s:5:"TOTAL";i:3;}s:24:"_searchtime_milliseconds";d:13;s:15:"_functionHeader";s:52:"function readFlexformTab($flexData, &$conf, $sTab) {";}s:12:"H_1a2ebda792";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:24;s:15:"_functionHeader";s:49:"function setFlexformConfiguration($key, $value) {";}s:12:"H_3a73837f90";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:14;s:15:"_functionHeader";s:33:"function setIrreConfiguration() {";}s:12:"H_ca61886d00";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:3;s:15:"_functionHeader";s:41:"function getJSValidationConfiguration() {";}s:12:"H_d62445db92";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:26:"function getFeUsersTca() {";}s:12:"H_6ec39f97bc";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:1;s:5:"TOTAL";i:1;}s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:26:"function getStoragePid() {";}s:12:"H_9aaa386603";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:2;s:5:"TOTAL";i:2;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:2;s:5:"TOTAL";i:2;}s:24:"_searchtime_milliseconds";d:18;s:15:"_functionHeader";s:40:"function deletePointInArrayKey($array) {";}s:12:"H_8c58dc9f10";a:4:{s:3:"ALL";a:2:{s:11:"objectUsage";i:2;s:5:"TOTAL";i:2;}s:14:"MD5_8f66ccd171";a:3:{s:8:"fileName";s:36:"pi1/class.tx_datamintsfeuser_pi1.php";s:11:"objectUsage";i:2;s:5:"TOTAL";i:2;}s:24:"_searchtime_milliseconds";d:6;s:15:"_functionHeader";s:26:"function checkUtf8($str) {";}s:12:"H_748d8d533e";a:2:{s:24:"_searchtime_milliseconds";d:1;s:15:"_functionHeader";s:29:"function cleanArray($array) {";}}}}}